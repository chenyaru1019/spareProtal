<%@ WebHandler Language="C#" Class="ContractHandler" %>

using System;
using System.Web;
using System.Web.Script.Serialization;
using OThinker.H3;
using System.Data;
using System.Collections.Generic;
using Newtonsoft.Json;
using System.Runtime.Serialization;
using OThinker.H3.Portal.Entity;
using OThinker.H3.Portal.service;

public class ContractHandler : IHttpHandler {
    JavaScriptSerializer jsSerializer = new JavaScriptSerializer();
    public void ProcessRequest (HttpContext context) {

        string command = context.Request["Command"];
        switch (command)
        {
            case "generateContractNo": generateContractNo(context); break;
            case "getByContractNo": getByContractNo(context); break;
            case "getHYData": getHYData(context); break;

        }
    }

    public void generateContractNo (HttpContext context) {

        string ContractType = context.Request["ContractType"];
        string ContractProperty = context.Request["ContractProperty"];
        string SubProjectCode = context.Request["SubProjectCode"];
        string Country = context.Request["Country"];
        string ContractNo = "";
        string year = DateTime.Now.Year.ToString().Substring(2,2);
        // 国内合同
        if(ContractType.Equals("GN"))
        {
            //SPIAIE - 17028-PK-TILC II 01 015
            //SPIAIE：固定公司名称
            //17 : 当前年份
            //028 ：国内合同当年累积流水号
            //PK-TILC II ：最终用户对应的工程编码
            //01 :  国内合同
            //015 : 对应工程下国内合同流水号（国内／进口分开）
            int curyearnum = (int)Convert.ToSingle(getMaxContNumOfCurYear(year)) + 1;
            int gnpronum = (int)Convert.ToSingle(getMaxContNumOfGNPro(SubProjectCode,"01")) + 1;
            ContractNo = "SPIAIE-" + year + string.Format("{0:000}",curyearnum) + "-" + SubProjectCode + "01" + string.Format("{0:000}",gnpronum);
            // 进口合同
        } else if (ContractType.Equals("JK"))
        {
            //17SPIAIE56-855BE-PK-5PDII 02 002
            //17 ：当前年份
            //SPIAIE：固定公司名称
            //56 ：合同性质，56对应货物、技术合同；34对应航空煤油
            //855 ：航油／非航油进口合同累积流水号（航油、非航油分开累计）
            //BE ：国别编码
            //PK－5PDII ：最终用户对应的工程编码
            //02 ：进口合同
            //002: 工程下进口合同流水号
            //备注：航油合同没有-PK-5PDII 02 002 
            string type = "";
            if(ContractProperty.Equals("ContractProperty_HKMY"))
            {
                type = "34";
            }else if(ContractProperty.Equals("ContractProperty_JS") || ContractProperty.Equals("ContractProperty_HW"))
            {
                type = "56";
            }
            int curyearnum = (int)Convert.ToSingle(getMaxContNumOfHY(year,type)) + 1;
            int gnpronum = (int)Convert.ToSingle(getMaxContNumOfGNPro(SubProjectCode,"02")) + 1;
            if (ContractProperty.Equals("ContractProperty_HKMY"))
            {
                ContractNo = year + "SPIAIE" + type + "-" + string.Format("{0:000}",curyearnum) + Country;
            }else
            {
                ContractNo = year + "SPIAIE" + type + "-" + string.Format("{0:000}",curyearnum) + Country + "-" + SubProjectCode + "02" + string.Format("{0:000}",gnpronum);
            }

        }

        object JSONObj = JsonConvert.SerializeObject(ContractNo);
        context.Response.ContentType = "application/json";
        context.Response.Write(JSONObj);
    }

    // 获取国内合同当年累积流水号
    public string getMaxContNumOfCurYear(string year)
    {
        int num = 0;
        System.Data.DataTable dt = OThinker.H3.Controllers.AppUtility.Engine.EngineConfig.CommandFactory.CreateCommand().ExecuteDataTable(
            "SELECT ContractNo FROM I_ContractMain where ContractNo like 'SPIAIE-"+year+"%' ");
        List<Dictionary<string, string>> mList = new List<Dictionary<string, string>>();
        if (dt.Rows.Count > 0)
        {
            foreach (DataRow dr in dt.Rows)
            {
                int curnum = (int)Convert.ToSingle(dr["ContractNo"].ToString().Split('-')[1].Substring(2));
                if(curnum > num)
                {
                    num = curnum;
                }
            }
            return num.ToString();
        } else
        {
            return num.ToString();
        }
    }

    // 获取对应工程下国内合同流水号（国内／进口分开）
    public string getMaxContNumOfGNPro(string SubProjectCode, string countrytype)
    {
        int num = 0;
        System.Data.DataTable dt = OThinker.H3.Controllers.AppUtility.Engine.EngineConfig.CommandFactory.CreateCommand().ExecuteDataTable(
            "SELECT ContractNo FROM I_ContractMain where ContractNo like '%"+SubProjectCode+countrytype+"%' ");
        List<Dictionary<string, string>> mList = new List<Dictionary<string, string>>();
        int len = (SubProjectCode + countrytype).Length;
        if (dt.Rows.Count > 0)
        {
            foreach (DataRow dr in dt.Rows)
            {
                int curnum = (int)Convert.ToSingle(dr["ContractNo"].ToString().Split('-')[2].Substring(len));
                if(curnum > num)
                {
                    num = curnum;
                }
            }
            return num.ToString();
        } else
        {
            return num.ToString();
        }
    }

    // 获取航油、非航油合同累积流水号
    public string getMaxContNumOfHY(string year, string type)
    {
        int num = 0;

        System.Data.DataTable dt = OThinker.H3.Controllers.AppUtility.Engine.EngineConfig.CommandFactory.CreateCommand().ExecuteDataTable(
            "SELECT ContractNo FROM I_ContractMain where ContractNo like '"+year+"SPIAIE"+type+"-%' ");
        List<Dictionary<string, string>> mList = new List<Dictionary<string, string>>();
        if (dt.Rows.Count > 0)
        {
            foreach (DataRow dr in dt.Rows)
            {
                string tp = dr["ContractNo"].ToString().Split('-')[1];
                int curnum = (int)Convert.ToSingle(tp.Substring(0,tp.Length-2));
                if(curnum > num)
                {
                    num = curnum;
                }
            }
            return num.ToString();
        } else
        {
            return num.ToString();
        }
    }

    public void getByContractNo (HttpContext context) {
        string ContractNo = context.Request["ContractNo"];
        // 国内合同
        ContractMain con = new ContractMain();
        System.Data.DataTable dt = OThinker.H3.Controllers.AppUtility.Engine.EngineConfig.CommandFactory.CreateCommand().ExecuteDataTable(
            " SELECT ContractNo,ContractName,PostA,PostB,"+
            " ContractType,enum1.EnumValue as ContractTypeName,"+
            " Country,enum2.EnumValue as CountryName,"+
            " ContractProperty ,enum3.EnumValue as ContractPropertyName"+
            " FROM I_ContractMain con"+
            " LEFT JOIN OT_EnumerableMetadata enum1 on con.ContractType = enum1.Code and enum1.Category = '合同类型' "+
            " LEFT JOIN OT_EnumerableMetadata enum2 on con.Country = enum2.Code and enum2.Category = '国别'"+
            " LEFT JOIN OT_EnumerableMetadata enum3 on con.ContractProperty = enum3.Code and enum3.Category = '合同性质'"+
            " where con.ContractNo = '"+ContractNo+"'");
        if (dt.Rows.Count > 0)
        {
            con.ContractNo = dt.Rows[0]["ContractNo"].ToString();
            con.ContractName = dt.Rows[0]["ContractName"].ToString();
            //OThinker.Organization.User ua = Common.getUserById(dt.Rows[0]["PostA"].ToString());
            //OThinker.Organization.User ub = Common.getUserById(dt.Rows[0]["PostB"].ToString());
            con.PostA = OThinker.H3.Controllers.AppUtility.Engine.Organization.GetName(dt.Rows[0]["PostA"].ToString());
            con.PostB = OThinker.H3.Controllers.AppUtility.Engine.Organization.GetName(dt.Rows[0]["PostB"].ToString());
            con.ContractType = dt.Rows[0]["ContractTypeName"].ToString();
            con.Country = dt.Rows[0]["CountryName"].ToString();
            con.ContractProperty = dt.Rows[0]["ContractPropertyName"].ToString();
        }

        object JSONObj = JsonConvert.SerializeObject(con);
        context.Response.ContentType = "application/json";
        context.Response.Write(JSONObj);
    }

    public void getHYData (HttpContext context) {
        // 国内合同
        Dictionary<string,string> dic = new Dictionary<string,string>();
        System.Data.DataTable dt = OThinker.H3.Controllers.AppUtility.Engine.EngineConfig.CommandFactory.CreateCommand().ExecuteDataTable(
            " SELECT * from I_HYContractSet ");
        if (dt.Rows.Count > 0) { 
            dic.Add("ObjectID",dt.Rows[0]["ObjectID"].ToString());
            dic.Add("PostB",dt.Rows[0]["PostB"].ToString());
            dic.Add("FinalUser",dt.Rows[0]["FinalUser"].ToString());
            dic.Add("BidType",dt.Rows[0]["BidType"].ToString());
            dic.Add("ContractType",dt.Rows[0]["ContractType"].ToString());
            dic.Add("ContractName",dt.Rows[0]["ContractName"].ToString());
            dic.Add("ContractShortName",dt.Rows[0]["ContractShortName"].ToString());
        }

        object JSONObj = JsonConvert.SerializeObject(dic);
        context.Response.ContentType = "application/json";
        context.Response.Write(JSONObj);
    }

public bool IsReusable
{
    get
    {
        return false;
    }
}
private IEngine _Engine = null;
/// <summary>
/// 流程引擎的接口，该接口会比this.Engine的方式更快，因为其中使用了缓存
/// </summary>
public IEngine Engine
{
    get
    {
        if (OThinker.H3.Controllers.AppConfig.ConnectionMode == ConnectionStringParser.ConnectionMode.Mono)
        {
            return OThinker.H3.Controllers.AppUtility.Engine;
        }
        return _Engine;
    }
    set
    {
        _Engine = value;
    }
}

}