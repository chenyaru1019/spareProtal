using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.IO;
using System.Text;
using OThinker.H3.Controllers;
using OThinker.H3.DataModel;
using OThinker.H3.Portal;
using OThinker.H3.BizBus.BizService;
using OThinker.H3.Sheet;
using OThinker.Data;
using OThinker.H3.Instance;
using OThinker.Organization;
using System.Collections.Generic;
using OThinker.H3.Acl;
using OThinker.H3.Portal.service;

namespace OThinker.H3.Portal.Sheets.DefaultEngine
{
    public partial class FKMy : OThinker.H3.Controllers.MvcPage 
    {
        protected void Page_Load(object sender, EventArgs e)
        {
        }

        public override MvcViewContext LoadDataFields()
        {
            // 后台获取Url的参数（通过Request来获取）
            string url = Request.Url.ToString();
            string ContractNo = Common.getUrlParam(url, "ContractNo");
            string FKType = Common.getUrlParam(url, "FKType");
            string JSObjectID = Common.getUrlParam(url, "JSObjectID");
            string JSResultNum = Common.getUrlParam(url, "JSResultNum");
            string QKSubObjectIDs = Common.getUrlParam(url, "QKSubObjectIDs"); 
            if (!JSObjectID.Equals(""))
            {
                this.ActionContext.InstanceData["ZKTypeHidden"].Value = FKType;
                this.ActionContext.InstanceData["JSObjectID"].Value = JSObjectID;
                this.ActionContext.InstanceData["CurZJAmount"].Value = JSResultNum;

                BizObject[] bizObjects = new BizObject[1];
                BizObjectSchema childSchema = this.ActionContext.Schema.GetProperty("FKTbl").ChildSchema;
                // 第一行
                bizObjects[0] = new BizObject(this.ActionContext.Engine, childSchema, this.ActionContext.User.UserID);

                bizObjects[0]["ZJKX"] = "";
                bizObjects[0]["Amount"] = JSResultNum;
                bizObjects[0]["ZKMS"] = "";
                bizObjects[0]["QKDetail"] = "-1"; //无请款明细对应

                this.ActionContext.InstanceData["FKTbl"].Value = bizObjects;
            }
            else if (!QKSubObjectIDs.Equals(""))
            {
                var arr = QKSubObjectIDs.Split(',');
                if (arr.Length > 0)
                {
                    var cnt = 0;
                    foreach (string item in arr)
                    {
                        if (!item.Equals(""))
                        {
                            cnt++;
                        }
                    }
                    BizObject[] bizObjects = new BizObject[cnt];
                    var j = 0;
                    var ZJKX = "";
                    var Amount = "";
                    var Currency = "";
                    var CurrencyWB = "";
                    System.Data.DataTable dt_cu = OThinker.H3.Controllers.AppUtility.Engine.EngineConfig.CommandFactory.CreateCommand().ExecuteDataTable(
                            " SELECT top 1 Currency " +
                            " FROM I_ContractMain c " +
                            " where c.ContractNo = '" + ContractNo + "'");
                    if (dt_cu.Rows.Count > 0)
                    {
                        CurrencyWB = dt_cu.Rows[0]["Currency"].ToString();
                    }
                    foreach (string item in arr)
                    {
                        if(!item.Equals(""))
                        {
                            System.Data.DataTable dt_qs = OThinker.H3.Controllers.AppUtility.Engine.EngineConfig.CommandFactory.CreateCommand().ExecuteDataTable(
                            " SELECT ObjectID,ZJKX,Amount,Currency " +
                            " FROM I_QKSubTbl qs " +
                            " where qs.ObjectID = '" + item + "'");
                            if (dt_qs.Rows.Count > 0)
                            {
                                ZJKX = dt_qs.Rows[0]["ZJKX"].ToString();
                                Amount = dt_qs.Rows[0]["Amount"].ToString();
                                Currency = dt_qs.Rows[0]["Currency"].ToString();
                            }
                            BizObjectSchema childSchema = this.ActionContext.Schema.GetProperty("FKTbl").ChildSchema;
                            // 第一行
                            bizObjects[j] = new BizObject(this.ActionContext.Engine, childSchema, this.ActionContext.User.UserID);
                            bizObjects[j]["ZJKX"] = ZJKX;
                            bizObjects[j]["Amount"] = Amount;
                            bizObjects[j]["QKDetail"] = item;
                            j++;
                        }
                    }
                    this.ActionContext.InstanceData["FKTbl"].Value = bizObjects;
                    if (ZJKX.EndsWith("_HT"))
                    {
                        this.ActionContext.InstanceData["ZKTypeHidden"].Value = "ZKType_HT";
                    }
                    else if (ZJKX.EndsWith("_FY"))
                    {
                        this.ActionContext.InstanceData["ZKTypeHidden"].Value = "ZKType_FY";
                    }
                    if (Currency.Equals("RMB"))
                    {
                        this.ActionContext.InstanceData["CurrencyHidden"].Value = "RMB";
                    }
                    else
                    {
                        this.ActionContext.InstanceData["CurrencyHidden"].Value = CurrencyWB;
                    }
                }
            }
            else if (!ContractNo.Equals(""))
            {
                this.ActionContext.InstanceData["ZKType"].Value = "";
            }

            // 获取付款单流程的版本号
            int versionFKReceipt = OThinker.H3.Controllers.AppUtility.Engine.WorkflowManager.GetWorkflowDefaultVersion("FKReceipt");
            this.ActionContext.InstanceData["WorkflowVersion_FKReceipt"].Value = versionFKReceipt;

            // 获取取回子流程的版本号
            int versionBack = OThinker.H3.Controllers.AppUtility.Engine.WorkflowManager.GetWorkflowDefaultVersion("GetBackContract");
            this.ActionContext.InstanceData["WorkflowVersion_Back"].Value = versionBack;
            // 获取回退记录
            System.Data.DataTable dt_back = OThinker.H3.Controllers.AppUtility.Engine.EngineConfig.CommandFactory.CreateCommand().ExecuteDataTable(
                    " SELECT ins.OriginatorName Approver,ins.StartTime ApproveDate,ins.State Status,ins.ObjectID, " +
                        " gb.OldInstanceActivityName,gb.InstanceActivityName,c.[Text] Remark  " +
                        " FROM I_GetBackContract gb, OT_InstanceContext ins, OT_Comment c " +
                        " where gb.NeedInstanceId = '" + this.ActionContext.InstanceId + "' and gb.ObjectID = ins.BizObjectId and ins.ObjectID = c.InstanceId");
            if (dt_back.Rows.Count > 0)
            {
                BizObject[] bizObjects = new BizObject[dt_back.Rows.Count];
                var i = 0;
                foreach (DataRow dr in dt_back.Rows)
                {
                    BizObjectSchema childSchema = this.ActionContext.Schema.GetProperty("GetBackFKTbl").ChildSchema;
                    // 第一行
                    bizObjects[i] = new BizObject(this.ActionContext.Engine, childSchema, this.ActionContext.User.UserID);
                    bizObjects[i]["Approver"] = dr["Approver"].ToString();
                    bizObjects[i]["ApproveDate"] = dr["ApproveDate"].ToString();
                    bizObjects[i]["Remark"] = dr["Remark"].ToString();
                    bizObjects[i]["OldInstanceActivityName"] = dr["OldInstanceActivityName"].ToString();
                    bizObjects[i]["InstanceActivityName"] = dr["InstanceActivityName"].ToString();

                    var st = dr["Status"].ToString();
                    Dictionary<string, string> workItemDic = Common.getWorkItemId(dr["ObjectID"].ToString(), st);
                    foreach (var item in workItemDic)
                    {
                        Console.WriteLine(item.Key + item.Value);
                        if (item.Key.Equals("workItemId"))
                        {
                            bizObjects[i]["WorkItemId"] = item.Value;
                        }
                    }
                    bizObjects[i]["Status"] = st == "2" ? "审批中" : (st == "4" ? "已回退" : "");
                    i++;
                }
                this.ActionContext.InstanceData["GetBackFKTbl"].Value = bizObjects;
            }

            return base.LoadDataFields();
        }

        /// <summary>
        /// 保存表单数据到引擎中
        /// </summary>
        /// <param name="Args"></param>
        public override void SaveDataFields(MvcPostValue MvcPost, MvcResult result)
        {
            // 保存后，后台执行事件
            base.SaveDataFields(MvcPost, result);

            
        }
        
    }
}
