// 提交前事件
$.MvcSheet.SubmitAction.OnActionPreDo = function () {
    //if (!checkCurrency()) {
    //    return false;
    //}
}
// 提交后事件
$.MvcSheet.ActionDone = function (data) {
    // this.Action; // 获取当前按钮名称
    if ($.MvcSheetUI.SheetInfo.ActivityCode == "ActivityOrig") {
        if (this.Action == "Submit" || this.Action == "Save") {
            //var QKObjectIDs = $.MvcSheetUI.GetControlValue("QKObjectIDs");
            //// 设置请款中的累计到款值
            //// 获取客户信息数据
            //$.ajax({
            //    type: "POST",    //页面请求的类型
            //    url: "ContractHandler.ashx?Command=SetQKLJDK",   //处理页的相对地址
            //    data: {
            //        QKObjectIDs: QKObjectIDs,
            //    },
            //    async: false,
            //    success: function (ret) {    //这是处理后执行的函数，msg是处理页返回的数据
            //        console.log("设置请款中的累计到款值成功");
            //    }
            //});
        }
    } else if ($.MvcSheetUI.SheetInfo.ActivityCode == "ActivityConfirm") {
        if (this.Action == "Submit") {
            var QKObjectIDs = $.MvcSheetUI.GetControlValue("QKObjectIDs");
            // 设置请款中的累计到款值
            // 获取客户信息数据
            $.ajax({
                type: "POST",    //页面请求的类型
                url: "ContractHandler.ashx?Command=SetQKLJDK",   //处理页的相对地址
                data: {
                    QKObjectIDs: QKObjectIDs,
                },
                async: false,
                success: function (ret) {    //这是处理后执行的函数，msg是处理页返回的数据
                    console.log("设置请款中的累计到款值成功");
                }
            });
        }
    }
}
//数据加载后
$.MvcSheet.Loaded = function () {
    // 请款对象
    var Target = getUrlParam("Target");
    var Amount = getUrlParam("Amount");
    var QKObjectIDs = getUrlParam("QKObjectIDs");
    var DK_Target = "";
    if (Target != null && Target != "") {
        $.MvcSheetUI.SetControlValue("QKObjectIDs", QKObjectIDs);
        var QKObjectIDArr = QKObjectIDs.split(",");
        // 获取客户信息数据
        $.ajax({
            type: "POST",    //页面请求的类型
            url: "ContractHandler.ashx?Command=getCustomerById",   //处理页的相对地址
            data: {
                ObjectID: Target,
            },
            async: false,
            success: function (ret) {    //这是处理后执行的函数，msg是处理页返回的数据
                DK_Target = ret.CompanyName + '（' + ret.ModelOrDepartment + '）';
                
            }
        });
        $.MvcSheetUI.SetControlValue("DK_Target", DK_Target);
        // 获取所有的币种
        var Currencys = new Array();
        $.ajax({
            type: "POST",    //页面请求的类型
            url: "ContractHandler.ashx?Command=getCurrencys",   //处理页的相对地址
            data: {
            },
            async: false,
            success: function (ret) {    //这是处理后执行的函数，msg是处理页返回的数据
                for (var i = 0; i < ret.length; i++) {
                    var amounts = Amount.split(",");
                    for (var k = 0; k < amounts.length; k++) {
                        var curr = amounts[k].split(" ")[1];
                        if (ret[i].Code == curr) {
                            Amount = Amount.replace(curr, ret[i].Value);
                        }
                    }
                }

            }
        });

        $.MvcSheetUI.SetControlValue("Amount", Amount);
        
        // 表格数据
        $.ajax({
            type: "POST",    //页面请求的类型
            url: "ContractHandler.ashx?Command=getDKLSData",   //处理页的相对地址
            data: {
                DK_Target: DK_Target,
            },
            async: false,
            success: function (ret) {    //这是处理后执行的函数，msg是处理页返回的数据
                var dtl = $.MvcSheetUI.GetElement("BatchDKTblOfDK").SheetGridView();
                dtl._Clear();
                var index = 0;
                for (var i = 0; i < ret.length; i++) {
                    // 勾选的数据是否在所有批量数据中
                    var b = IsInArr(QKObjectIDArr, ret[i].QKObjectID);
                    if (b >= 0) {
                        dtl._AddRow();
                        index++;
                        $.MvcSheetUI.SetControlValue("BatchDKTblOfDK.ContractNo", ret[i].ContractNo, index);
                        $.MvcSheetUI.SetControlValue("BatchDKTblOfDK.QKSeq", ret[i].QKSeq, index);
                        $.MvcSheetUI.SetControlValue("BatchDKTblOfDK.QKObjectID", ret[i].QKObjectID, index);
                        $.MvcSheetUI.SetControlValue("BatchDKTblOfDK.QKSeqHidden", ret[i].QKSeqHidden, index);
                        $.MvcSheetUI.SetControlValue("BatchDKTblOfDK.QKType", ret[i].QKType, index);
                        $.MvcSheetUI.SetControlValue("BatchDKTblOfDK.QKTypeCode", ret[i].QKTypeCode, index);
                        $.MvcSheetUI.SetControlValue("BatchDKTblOfDK.QKTarget", ret[i].QKTarget, index);
                        $.MvcSheetUI.SetControlValue("BatchDKTblOfDK.QKTargetCode", ret[i].QKTarget, index);
                        $.MvcSheetUI.SetControlValue("BatchDKTblOfDK.QKDate", ret[i].QKDate, index);
                        $.MvcSheetUI.SetControlValue("BatchDKTblOfDK.ZJKX", ret[i].ZJKX, index);
                        $.MvcSheetUI.SetControlValue("BatchDKTblOfDK.ZJMS", ret[i].ZJMS, index);
                        $.MvcSheetUI.SetControlValue("BatchDKTblOfDK.QKAmount", ret[i].QKAmount, index);
                        $.MvcSheetUI.SetControlValue("BatchDKTblOfDK.QKCurrencyCode", ret[i].QKCurrencyCode, index);
                        $.MvcSheetUI.SetControlValue("BatchDKTblOfDK.QKCurrency", ret[i].QKCurrency, index);
                        $.MvcSheetUI.SetControlValue("BatchDKTblOfDK.QKConvertAmount", ret[i].QKConvertAmount, index);
                        $.MvcSheetUI.SetControlValue("BatchDKTblOfDK.SeqCnt", ret[i].SeqCnt, index);
                        $.MvcSheetUI.SetControlValue("BatchDKTblOfDK.LJDKAmount", ret[i].LJDKAmount, index);
                        var QKObjectID = QKObjectIDArr[b].split(":")[0];
                        var CurDKAmount = QKObjectIDArr[b].split(":")[1];
                        var CurDKCurrency = QKObjectIDArr[b].split(":")[2];
                        var s = QKObjectIDArr[b].split(":")[3];
                        var Status = "";
                        if (s == "0") {
                            Status = "未到款";
                        } else if (s == "1") {
                            Status = "部分到款";
                        } else if (s == "2") {
                            Status = "全部到款";
                        }
                        $.MvcSheetUI.SetControlValue("BatchDKTblOfDK.CurDKAmount", CurDKAmount, index);
                        $.MvcSheetUI.SetControlValue("BatchDKTblOfDK.CurDKCurrency", CurDKCurrency, index);
                        $.MvcSheetUI.SetControlValue("BatchDKTblOfDK.Status", Status, index);
                    }
                }
            }
        });


    }

    if ($.MvcSheetUI.SheetInfo.ActivityCode == "ActivityOrig") {
        //$(".BatchDKTblOfDK").hide();
    }
    
    $("input[data-datafield='DK_Target']").attr("disabled", "disabled");
    $("input[data-datafield='Amount']").attr("disabled", "disabled");

    $("input[data-datafield='BatchDKTblOfDK.ContractNo']").attr("disabled", "disabled");
    $("input[data-datafield='BatchDKTblOfDK.QKSeq']").attr("disabled", "disabled");
    $("input[data-datafield='BatchDKTblOfDK.QKType']").attr("disabled", "disabled");
    $("input[data-datafield='BatchDKTblOfDK.QKTarget']").attr("disabled", "disabled");
    $("input[data-datafield='BatchDKTblOfDK.QKDate']").attr("disabled", "disabled");
    $("input[data-datafield='BatchDKTblOfDK.ZJKX']").attr("disabled", "disabled");
    $("input[data-datafield='BatchDKTblOfDK.ZJMS']").attr("disabled", "disabled");
    $("input[data-datafield='BatchDKTblOfDK.QKAmount']").attr("disabled", "disabled");
    $("input[data-datafield='BatchDKTblOfDK.QKCurrency']").attr("disabled", "disabled");
    $("input[data-datafield='BatchDKTblOfDK.QKConvertAmount']").attr("disabled", "disabled");
    $("input[data-datafield='BatchDKTblOfDK.LJDKAmount']").attr("disabled", "disabled");
    $("input[data-datafield='BatchDKTblOfDK.Status']").attr("disabled", "disabled");
    $("[data-datafield='BatchDKTblOfDK.CurDKCurrency']").attr("disabled", "disabled");
    $("input[data-datafield='BatchDKTblOfDK.CurDKAmount']").attr("disabled", "disabled");
}

// 是否包含，包含返回序列号，不包含返回-1
function IsInArr(arr, str) {
    for (var j = 0; j < arr.length; j++) {
        var QKObjectID = arr[j].split(":")[0];
        if (str == QKObjectID) {
            return j;
        }
    }
    return -1;
}

