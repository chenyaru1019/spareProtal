// 表单验证接口
$.MvcSheet.Validate = function () {

    // 填写申请单环节，设置  必填
    if ($.MvcSheetUI.SheetInfo.ActivityCode == "ActivityOrig") {
        if (this.Action == "Submit") {
            // 验证是否有不同的请款对象同时提交数据
            var dtl = $.MvcSheetUI.GetElement("DKTbl").SheetGridView();
            var len = dtl.RowCount;
            if (len > 0) {
                var QKTargetArr = new Array();
                for (var i = 0; i < len - 1; i++) {
                    var CurDKAmount = $.MvcSheetUI.GetControlValue("DKTbl.CurDKAmount", i + 1);
                    if (parseFloat(CurDKAmount) > 0) {
                        QKTargetArr.push($.MvcSheetUI.GetControlValue("DKTbl.QKTargetCode", i + 1));
                        
                    }
                }
                for (var j = 0; j < QKTargetArr.length-1;j++) {
                    if (QKTargetArr[j] != QKTargetArr[j+1]) {
                        alert("请款对象必须一致！");
                        return false;
                    }
                }
            }

        }
    }
    return true;
}

//}
//数据加载后
$.MvcSheet.Loaded = function () {
    // 合同号码
    var ContractNo = getUrlParam("ContractNo");
    var DKType = getUrlParam("DKType");
    if (ContractNo != null && ContractNo != "") {
        // 根据合同号码获取对应合同相关数据
        $.ajax({
            type: "POST",    //页面请求的类型
            url: "ContractHandler.ashx?Command=getByContractNo",   //处理页的相对地址
            data: {
                ContractNo: ContractNo,
            },
            async: false,
            success: function (ret) {    //这是处理后执行的函数，msg是处理页返回的数据
                $.MvcSheetUI.SetControlValue("ContractNo", ret.ContractNo);
                $.MvcSheetUI.SetControlValue("ContractName", ret.ContractName);
                $.MvcSheetUI.SetControlValue("PostAB", ret.PostA + "," + ret.PostB);

                $.MvcSheetUI.SetControlValue("DKType", DKType);
                // 根据合同号码获取请款相关数据
                $.ajax({
                    type: "POST",    //页面请求的类型
                    url: "ContractHandler.ashx?Command=getDKTbl",   //处理页的相对地址
                    data: {
                        ContractNo: ContractNo,
                    },
                    async: false,
                    success: function (ret) {    //这是处理后执行的函数，msg是处理页返回的数据
                        var dtl = $.MvcSheetUI.GetElement("DKTbl").SheetGridView();
                        dtl._Clear();
                        var len = dtl.RowCount;
                        var j = 1;
                        for (var i = 0; i < ret.length; i++) {
                            dtl._AddRow();
                            len += 1;
                            $.MvcSheetUI.SetControlValue("DKTbl.QKSeq", ret[i].QKSeq, len);
                            $.MvcSheetUI.SetControlValue("DKTbl.QKObjectID", ret[i].QKObjectID, len);
                            $.MvcSheetUI.SetControlValue("DKTbl.QKSeqHidden", ret[i].QKSeq, len);
                            $.MvcSheetUI.SetControlValue("DKTbl.QKType", ret[i].QKType, len);
                            $.MvcSheetUI.SetControlValue("DKTbl.QKTypeCode", ret[i].QKTypeCode, len);
                            $.MvcSheetUI.SetControlValue("DKTbl.QKTarget", ret[i].QKTarget, len);
                            $.MvcSheetUI.SetControlValue("DKTbl.QKTargetCode", ret[i].QKTarget, len);
                            $.MvcSheetUI.SetControlValue("DKTbl.QKDate", ret[i].QKDate, len);
                            $.MvcSheetUI.SetControlValue("DKTbl.ZJKX", ret[i].ZJKX, len);
                            $.MvcSheetUI.SetControlValue("DKTbl.ZJMS", ret[i].ZJMS, len);
                            $.MvcSheetUI.SetControlValue("DKTbl.QKAmount", ret[i].QKAmount, len);
                            $.MvcSheetUI.SetControlValue("DKTbl.QKCurrencyCode", ret[i].QKCurrencyCode, len);
                            $.MvcSheetUI.SetControlValue("DKTbl.QKCurrency", ret[i].QKCurrency, len);
                            $.MvcSheetUI.SetControlValue("DKTbl.QKConvertAmount", ret[i].QKConvertAmount, len);
                            $.MvcSheetUI.SetControlValue("DKTbl.SeqCnt", ret[i].SeqCnt, len);
                            $.MvcSheetUI.SetControlValue("DKTbl.LJDKAmount", ret[i].LJDKAmount, len);

                        }


                    }
                });

            }
        });
        
    }

    // 请款子表的合并单元格操作
    var dtl = $.MvcSheetUI.GetElement("DKTbl").SheetGridView();
    var len = dtl.RowCount;
    var QKSeqHidden = "Start";
    if (len > 0) {
        for (var i = 0; i < len; i++) {
            // 对需要合并的项目进行合并
            if (QKSeqHidden == "Start" || QKSeqHidden != $.MvcSheetUI.GetControlValue("DKTbl.QKSeqHidden", i + 1)) {
                var SeqCnt = $.MvcSheetUI.GetControlValue("DKTbl.SeqCnt", i + 1);
                var Status = $.MvcSheetUI.GetControlValue("DKTbl.Status", i + 1);
                var k = 0;
                $("[data-datafield='DKTbl']").find("tr.rows").each(function () {
                    if (k == i) {
                        $(this).find("td[data-field='DKTbl.QKSeq']").attr("rowspan", SeqCnt);
                        $(this).find("td[data-field='DKTbl.QKType']").attr("rowspan", SeqCnt);
                        $(this).find("td[data-field='DKTbl.QKTarget']").attr("rowspan", SeqCnt);
                        $(this).find("td[data-field='DKTbl.QKDate']").attr("rowspan", SeqCnt);
                        $(this).find("td[data-field='DKTbl.QKConvertAmount']").attr("rowspan", SeqCnt);
                        //if (Status != "审批完成") {
                        //    $(this).find("td[data-field='QKMainTbl.Operate'] a.updateQK").show();
                        //} else {
                        //    $(this).find("td[data-field='QKMainTbl.Operate'] a.updateQK").hide();
                        //}
                    }
                    k++;
                });
            } else {
                var k = 0;
                $("[data-datafield='DKTbl']").find("tr.rows").each(function () {
                    if (k == i) {
                        $(this).find("td[data-field='DKTbl.QKSeq']").remove();
                        $(this).find("td[data-field='DKTbl.QKType']").remove();
                        $(this).find("td[data-field='DKTbl.QKTarget']").remove();
                        $(this).find("td[data-field='DKTbl.QKDate']").remove();
                        $(this).find("td[data-field='DKTbl.QKConvertAmount']").remove();
                    }
                    k++;
                });
            }
            QKSeqHidden = $.MvcSheetUI.GetControlValue("DKTbl.QKSeqHidden", i + 1);
            // 币种初始化
            $.MvcSheetUI.SetControlValue("DKTbl.CurDKCurrency", $.MvcSheetUI.GetControlValue("DKTbl.QKCurrencyCode", i + 1) , i + 1);
            

        }
    }
    $("input[data-datafield='ContractNo']").attr("disabled", "disabled");
    $("input[data-datafield='ContractName']").attr("disabled", "disabled");
    $("input[data-datafield='PostAB']").attr("disabled", "disabled");
    $("input[data-datafield='DKTbl.QKSeq']").attr("disabled", "disabled");
    $("input[data-datafield='DKTbl.QKType']").attr("disabled", "disabled");
    $("input[data-datafield='DKTbl.QKTarget']").attr("disabled", "disabled");
    $("input[data-datafield='DKTbl.QKDate']").attr("disabled", "disabled");
    $("input[data-datafield='DKTbl.ZJKX']").attr("disabled", "disabled");
    $("input[data-datafield='DKTbl.ZJMS']").attr("disabled", "disabled");
    $("input[data-datafield='DKTbl.QKAmount']").attr("disabled", "disabled");
    $("input[data-datafield='DKTbl.QKCurrency']").attr("disabled", "disabled");
    $("input[data-datafield='DKTbl.QKConvertAmount']").attr("disabled", "disabled");
    $("input[data-datafield='DKTbl.LJDKAmount']").attr("disabled", "disabled");
    $("input[data-datafield='DKTbl.Status']").attr("disabled", "disabled");
    $("[data-datafield='DKTbl.CurDKCurrency']").attr("disabled", "disabled");
    $("input[data-datafield='DKAmount']").attr("disabled", "disabled");
}

function setTbl() {
    var DKType = $.MvcSheetUI.GetControlValue("DKType");
    var DKCurrency = $.MvcSheetUI.GetControlValue("DKCurrency");
    var dtl = $.MvcSheetUI.GetElement("DKTbl").SheetGridView();
    var len = dtl.RowCount;
    if (len > 0 && typeof (DKType) != "undefined" && typeof (DKCurrency) != "undefined") {
        for (var i = 0; i < len; i++) {
            var QKCurrencyCode = $.MvcSheetUI.GetControlValue("DKTbl.QKCurrencyCode", i + 1);
            var QKTypeCode = $.MvcSheetUI.GetControlValue("DKTbl.QKTypeCode", i + 1);
            // 请款类型和到款类型一致 且 当前币种和到款币种一致，可写
            if (((DKType == "DKType_HT" && QKTypeCode == "HT") || (DKType == "DKType_FY" && QKTypeCode == "FY") || (DKType == "DKType_JS" && QKTypeCode == "JS") )
                && (DKCurrency == QKCurrencyCode) ) {
                var k = 0;
                $("[data-datafield='DKTbl']").find("tr.rows").each(function () {
                    if (k == i) {
                        $(this).find("input[data-datafield='DKTbl.CurDKAmount']").attr("disabled", false);
                        $(this).find("input[data-datafield='DKTbl.CurDKAmount']").addClass("DKInputAmount");
                    }
                    k++;
                });
                $.MvcSheetUI.SetControlValue("DKTbl.CurDKCurrency", DKCurrency, i + 1);
            } else {
                // 否则，不可写
                var k = 0;
                $("[data-datafield='DKTbl']").find("tr.rows").each(function () {
                    if (k == i) {
                        $(this).find("input[data-datafield='DKTbl.CurDKAmount']").attr("disabled", "disabled");
                        $(this).find("input[data-datafield='DKTbl.CurDKAmount']").removeClass("DKInputAmount");
                    }
                    k++;
                });
                $.MvcSheetUI.SetControlValue('DKTbl.CurDKAmount', 0, i + 1);
            }
            
        }
    }
}

function compute() {
    
    var DKCurrency = $.MvcSheetUI.GetControlValue("DKCurrency");
    var dtl = $.MvcSheetUI.GetElement("DKTbl").SheetGridView();
    var len = dtl.RowCount;
    var totalamount = 0.0;
    if (len > 0) {
        for (var i = 0; i < len; i++) {
            var CurDKCurrency = $.MvcSheetUI.GetControlValue("DKTbl.CurDKCurrency", i + 1);
            // 当前币种和到款币种一致，累计
            if (DKCurrency == CurDKCurrency) {
                var CurDKAmount = $.MvcSheetUI.GetControlValue("DKTbl.CurDKAmount", i + 1);
                totalamount += (parseFloat(CurDKAmount));
            } 
            // 状态显示
            var CurDKAmount = $.MvcSheetUI.GetControlValue("DKTbl.CurDKAmount", i + 1);
            var LJDKAmount = $.MvcSheetUI.GetControlValue("DKTbl.LJDKAmount", i + 1);
            var LJDKAmount = LJDKAmount == "" ? 0 : LJDKAmount;
            var QKAmount = $.MvcSheetUI.GetControlValue("DKTbl.QKAmount", i + 1);
            if ((parseFloat(CurDKAmount) + parseFloat(LJDKAmount)) > parseFloat(QKAmount)){
                $.MvcSheetUI.SetControlValue('DKTbl.Status', "超额到款", i + 1);
            } else if ((parseFloat(CurDKAmount) + parseFloat(LJDKAmount)) == parseFloat(QKAmount)) {
                $.MvcSheetUI.SetControlValue('DKTbl.Status', "全部到款", i + 1);
            } else if ((parseFloat(CurDKAmount) + parseFloat(LJDKAmount)) == 0) {
                $.MvcSheetUI.SetControlValue('DKTbl.Status', "未到款", i + 1);
            } else {
                $.MvcSheetUI.SetControlValue('DKTbl.Status', "部分到款", i + 1);
            }
        }
    }
    $.MvcSheetUI.SetControlValue('DKAmount', totalamount.toFixed(2));
}